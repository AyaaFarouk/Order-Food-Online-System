@using OrderFood.DAL.Entities.Models
 @using OrderFood.PL.Areas.Delivery.ViewModel
@using System.Text.Json
@model ICollection<DeliveryOrderDetailsVM>

@{
    ViewData["Title"] = "PreparedOrders";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>FoodMart - Free eCommerce Grocery Store HTML Website Template</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="author" content="">
    <meta name="keywords" content="">
    <meta name="description" content="">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="~/css/Restaurant/vendor.css">
    <link rel="stylesheet" type="text/css" href="~/css/Restaurant/style.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&family=Open+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
<style>
        .header-design {
            background-color: #ffc107;
            border-radius: 30px;
            padding:15px;
        }

        .order-card {
            box-shadow: 0px 5px 22px rgba(128, 128, 128, 0.584);
            /* width: 150px; */
            /* height: 300px; */
            min-height:100px !important;
            height:auto !important;
            background-color: white;
        }

            .order-card:hover {
                /* animation: fadeBg 1s forwards; */
                background-color: #ffc107d2;
                cursor:pointer;
            }

        .order-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .order-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
                background-color: #ffc107d2;
            }

    </style>
</head>
<body>
    <div class="container py-5 ">
    <section class="py-5 overflow-hidden">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">

                    <div class="section-header d-flex flex-wrap justify-content-between mb-5">
                            <h2 class="section-title header-design">Waiting To Deliver</h2>

                        <div class="d-flex align-items-center">
                            <a href="#" class="btn-link text-decoration-none">Pending Orders →</a>
                            <div class="swiper-buttons">
                                <button class="swiper-prev brand-carousel-prev btn btn-yellow">❮</button>
                                <button class="swiper-next brand-carousel-next btn btn-yellow">❯</button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-md-12">

                    <div class="brand-carousel swiper">
                        <div class="swiper-wrapper">
                            
                            @foreach (var item in Model)
                            {
                                      @if (item.OrderStatus == OrderStatus.Prepared){ 
                                    <div class="swiper-slide " onclick='GetOrderDetails(@Html.Raw(JsonSerializer.Serialize(item)))'>
                                            <div class="card mb-3 p-3 rounded-4 shadow-sm border-0 order-card bg-light-subtle">
                                                <div class="row g-0 align-items-center">
                                                    <div class="col-md-4 text-center">
                                                        <img src="~/images/Icons/add-cart.png" class="img-fluid rounded-3 " width="50" height="50" alt="Order">
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="card-body py-2">
                                                            <p class="text-muted fw-semibold mb-1">@item.Restaurant.Name</p>
                                                            <h5 class="card-title mb-0 text-dark">@item.ShippingAddress</h5>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                </div>
                                      }  
                            }

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
    
    <!-- =============================================== Partial View ============================================ -->
    <div id="orderDetailsContainer">
        <!-- Order details will be loaded here dynamically -->
    </div>
     
    @* fiiiiiiiiiiinalllllllllllllllllllllllllllllllllll *@

        <span class="section-title fs-3  header-design ">Order History</span>

        <div class="">
            <div class="card rounded-4 shadow-sm my-4 p-4">
                <div class="accordion accordion-flush" id="accordionFlushExample">
                    @foreach (var item in Model)
                    {
                        if (item.OrderStatus == OrderStatus.Completed || item.OrderStatus == OrderStatus.Shipping)
                        {
                            var collapseId = $"collapse-{item.Id}";
                            var headingId = $"heading-{item.Id}";
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="@headingId">
                                    <button class="accordion-button collapsed p-0 border-0 bg-transparent" type="button"
                                            data-bs-toggle="collapse" data-bs-target="#@collapseId"
                                            aria-expanded="false" aria-controls="@collapseId" onclick='GetDoneOrderDetails(@Html.Raw(JsonSerializer.Serialize(item)))'>
                                        <div class="w-100 d-flex flex-wrap align-items-center justify-content-between p-3">
                                            <div>
                                                <div>
                                                    <div class="fw-bold">Order ID</div>
                                                    <small class="text-muted">@item.Id</small>
                                                </div>
                                                <div class="fw-bold"></div>
                                                @* <small class="text-muted">@item.CreatedOrder</small> *@
                                            </div>
                                            <div class="d-flex align-items-center gap-2">
                                                <div>
                                                    <div class="fw-bold">Customer Name</div>
                                                    @{
                                                        string name = @item.Customer.UserName.Split('@')[0];
                                                    }
                                                    <small class="text-muted">@name</small>
                                                </div>
                                            </div>
                                            <div class="text-start">
                                                <small class="text-muted">Total</small><br>
                                                <span class="fw-bold">$@item.getTotal()</span>
                                            </div>
                                            <div class="text-start">
                                                <small class="text-muted">Restaurant</small><br>
                                                <span class="fw-bold">@item.Restaurant.Name</span>
                                            </div>
                                            <div class="text-start">
                                                <small class="text-muted">Address</small><br>
                                                <span class="text-warning"><i class="bi bi-geo-alt-fill me-1"></i></span>
                                                <span class="fw-bold">@item.ShippingAddress</span>
                                            </div>
                                            <div>
                                                @if (item.OrderStatus == OrderStatus.Completed)
                                                {

                                                    <span class="badge rounded-pill border border-success text-success px-3  py-2">@item.OrderStatus</span>
                                                }
                                                @if (item.OrderStatus == OrderStatus.Shipping)
                                                {

                                                    <span class="badge rounded-pill border border-warning text-warning px-3  py-2" onclick="updateShippingtoComplete(@item.Id)">@item.OrderStatus</span>
                                                }
                                            </div>
                                        </div>
                                        @* onclick='GetOrderHistory(@Html.Raw(JsonSerializer.Serialize(item)))' *@
                                    </button>
                                </h2>
                                <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId"
                                     data-bs-parent="#accordionFlushExample">

                                    <div class="accordion-body" id="accordion-body-id">


                                        

                                    </div>


                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

</div>

    
@*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// *@
    <script src="~/js/Restaurant/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>

    <script src="~/js/Restaurant/modernizr.js"></script>
    <script src="~/js/Restaurant/script.js"></script>
    <script src="~/js/Customer/Plugins.js"></script>

    <script>
        var swiper = new Swiper('.brand-carousel', {
            slidesPerView: 3,
            spaceBetween: 30,
            loop: true,
            navigation: {
                nextEl: '.brand-carousel-next',
                prevEl: '.brand-carousel-prev',
            },
        });

        function GetOrderDetails(order) {

             fetch('/delivery/delivery/GetOrderDetails', {
                 method: 'POST',
                 headers: { 'Content-Type': 'application/json' },
                 body: JSON.stringify(order)
             })
             .then(res => res.text())
             .then(html => {
                 document.getElementById("orderDetailsContainer").innerHTML = html;
             });
         }
        function GetDoneOrderDetails(order) {

             fetch('/delivery/delivery/GetOrderDetails', {
                 method: 'POST',
                 headers: { 'Content-Type': 'application/json' },
                 body: JSON.stringify(order)
             })
             .then(res => res.text())
             .then(html => {
                 document.getElementById("accordion-body-id").innerHTML = html;
             });
         }



        function updateShippingtoComplete(orderId){
                 fetch(`/delivery/delivery/updateShippingtoComplete/${orderId}`, {
            method: 'POST'
        })
            .then(response => {
                if (response.ok) {
                     alert("Order delivered Successfully!");
                    location.reload();
                } else {
                    alert("Failed to delivere order.");
                }
            });
        }


         function Acceptshipping(orderId){
                 fetch(`/delivery/delivery/Acceptshipping/${orderId}`, {
            method: 'POST'
        })
            .then(response => {
                if (response.ok) {
                     alert(" Out for shipping!");
                    location.reload();
                } else {
                    alert("Failed to mark order as done.");
                }
            });
        }
        
        function GetOrderHistory(order) {
            fetch('/delivery/delivery/GetOrderDetails', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(order)
            })
            .then(res => res.text())
            .then(html => {
                document.getElementById("accordion-body-id").innerHTML = html;
            });
        }
    </script>

</body>
</html>

 