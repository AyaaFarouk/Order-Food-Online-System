@model List<OrderFood.PL.Areas.Customer.Models.CategoryViewModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IConfiguration Configuration;

@{
    ViewData["Title"] = "Index";
    var restaurants = ViewData["Restaurants"] as List<OrderFood.DAL.Entities.Models.Restaurant>;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <section class="py-5 overflow-hidden">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="section-header d-flex flex-wrap justify-content-between mb-5">
                        <h2 class="section-title p-4  " style="color:#89c155; text-shadow border-radius:20px">Our Category</h2>
                        <div class="d-flex align-items-center">
                            <div class="swiper-buttons">
                                <button class="swiper-prev category-carousel-prev btn btn-yellow border-1 bg-warning">❮</button>
                                <button class="swiper-next category-carousel-next btn btn-yellow border-1 bg-warning">❯</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="category-carousel swiper">
                        <div class="swiper-wrapper">
                            @foreach (var item in Model)
                            {
                                <div class="swiper-slide category-item nav-link text-center position-relative category-card" data-category="@item.CategoryName" style="cursor:pointer;">
                                    <img src="/@item.Image" style="width: 100px; height: 100px; object-fit: cover;" />
                                    <h3 class="category-title mt-2">@item.CategoryName</h3>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    @* F5F5F5 *@
    <section>
        <div class="mt-4">
            <h3 class="text-center p-4 mb-4" style=" color:#89c155 ; border-radius:20px">Discover Our Restaurants</h3>
        </div>

        <!-- Search Form -->
            <form class="row justify-content-center" id="searchForm" onsubmit="return false;">
                <div class="col-md-3 mb-3 mb-md-0">
                    <input type="text" name="restaurantName" id="restaurantName" class="form-control" placeholder="Search Restaurant Name..." autocomplete="off" />
                </div>
                <div class="col-md-3">
                    <input type="text" name="restaurantAddress" id="restaurantAddress" class="form-control" placeholder="Address" autocomplete="off" />
                </div>
            </form>

        <div class="container my-5">
            <div id="restaurantContainer" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 justify-content-center">
                @await Html.PartialAsync("_RestaurantCards", restaurants)
            </div>
        </div>
    </section>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
    <link href="~/css/Restaurant/vendor.css" rel="stylesheet" />
    <link href="~/css/Restaurant/style.css" rel="stylesheet" />
    <link href="~/css/customer/customerhomeallresturant.css" rel="stylesheet" />
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
    <script src="~/js/Customer/customerhomeallresturant.js"></script>
    <script src="~/js/Restaurant/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/Restaurant/script.js"></script>
    <script>
        $(document).ready(function () {


            // Function to trigger AJAX request for filtering restaurants
            function filterRestaurants() {
                const category = $('.category-card.selected').data('category') || "";
                const name = $('#restaurantName').val();
                const address = $('#restaurantAddress').val();

                $.ajax({
                    url: '@Url.Action("FilterRestaurants", "Customer", new { area = "Customer" })',
                    type: 'GET',
                    data: {
                        categoryName: category,
                        name: name,
                        address: address
                    },
                    success: function (result) {
                        $('#restaurantContainer').html(result);
                    },
                    error: function () {
                        alert("Error loading restaurants.");
                    }
                });
            }

            // Handle category click to filter and toggle selected state
            $('.category-card').click(function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                } else {
                    $('.category-card').removeClass('selected');
                    $(this).addClass('selected');
                }
                filterRestaurants();
            });

            // Handle typing in search inputs with debounce
            let debounceTimer;
            $('#restaurantName, #restaurantAddress').on('input', function () {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(function () {
                    filterRestaurants();
                }, 300);
            });
        });
    </script>
}
